---
  - name: ARA | Create dedicated user
    user: name="{{ara_user}}"
    become: yes
    tags:
      - ara

  - name: ARA | Create directories
    file: path="{{item}}" state=directory owner="{{ara_user}}"
    with_items:
      - "{{ara_home}}"
      - "{{ara_log_dir}}"
      - "{{ara_virtual_env | default(ara_home)}}"
    become: yes
    tags:
      - ara

  - name: ARA | Install package dependencies
    apt: pkg="{{item}}"
    with_items:
      - "software-properties-common"
      - "python-dev"
      - "apt-transport-https"
      - "libssl-dev"
      - "gcc"
      - "libyaml-dev"
    become: yes
    tags:
      - ara

  - name: ARA | Install Ara
    pip: name=ara version={{ara_version | default(omit)}} virtualenv="{{ara_virtual_env | default(omit)}}"
    become: yes
    become_user: "{{ara_user if ara_virtual_env is defined else 'root'}}"
    notify: restart ara

  - set_fact:
      ara_virtualenv_path: ""
    when: ara_virtual_env is not defined

  - set_fact:
      ara_virtualenv_path: "{{ara_virtual_env}}/bin"
    when: ara_virtual_env is defined

  - name: ARA | get ara path
    shell: "{{ara_virtualenv_path}}python -c \"import os,ara; print(os.path.dirname(ara.__file__))\""
    register: ara_location_raw

  - set_fact:
      ara_location: "{{ara_location_raw.stdout}}"

  - debug: msg=" Use ANSIBLE_CALLBACK_PLUGINS={{ara_location}}/plugins/callbacks to instruct ansible to report to ara"
